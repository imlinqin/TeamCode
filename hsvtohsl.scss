
@function hsb($h-hsb, $s-hsb, $b-hsb, $a: 1) {
  @if $b-hsb == 0 {
    @return hsla(0, 0, 0, $a)
  } @else {
    $l-hsl: ($b-hsb/2) * (2 - ($s-hsb/100));
    $s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);
    @return hsla($h-hsb, $s-hsl, $l-hsl, $a);
  }
}


/*! hsv_to_hsl.scss | MIT License | https://gist.github.com/voxpelli/1069204 */

@function max($v1, $v2) {
	@return if($v1 > $v2, $v1, $v2);
}

@function min($v1, $v2) {
	@return if($v1 < $v2, $v1, $v2);
}

@function hsv_to_hsl($h, $s: 0, $v: 0) {
	@if type_of($h) == 'list' {
		$v: nth($h, 3);
		$s: nth($h, 2);
		$h: nth($h, 1);
	}

	@if unit($h) == 'deg' {
		$h: 3.1415 * 2 * ($h / 360deg);
	}

	@if unit($s) == '%' {
		$s: 0 + ($s / 100%);
	}

	@if unit($v) == '%' {
		$v: 0 + ($v / 100%);
	}

	$ss: $s * $v;
	$ll: (2 - $s) * $v;

	@if $ll <= 1 {
		$ss: $ss / $ll;
	}
	@else if ($ll == 2) {
		$ss: 0;
	}
	@else {
		$ss: $ss / (2 - $ll);
	}

	$ll: $ll / 2;

	@return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $ss))), percentage(max(0, min(1, $ll)));
}

@function hsl_to_hsv($h, $ss: 0, $ll: 0) {
	@if type_of($h) == 'list' {
		$ll: nth($h, 3);
		$ss: nth($h, 2);
		$h: nth($h, 1);
	}
	@else if type_of($h) == 'color' {
		$ll: lightness($h);
		$ss: saturation($h);
		$h: hue($h);
	}

	@if unit($h) == 'deg' {
		$h: 3.1415 * 2 * ($h / 360deg);
	}

	@if unit($ss) == '%' {
		$ss: 0 + ($ss / 100%);
	}

	@if unit($ll) == '%' {
		$ll: 0 + ($ll / 100%);
	}

	$ll: $ll * 2;

	@if $ll <= 1 {
		$ss: $ss * $ll;
	}
	@else {
		$ss: $ss * (2 - $ll);
	}

	$v: ($ll + $ss) / 2;
	$s: (2 * $ss) / ($ll + $ss);

	@return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $s))), percentage(max(0, min(1, $v)));
}

@function color_to_hsv($color) {
	@return hsl_to_hsv($color);
}

@function hsv_to_color($h, $s: 0, $v: 0) {
	$hsl: hsv_to_hsl($h, $s, $v);
	@return hsl(nth($hsl, 1), nth($hsl, 2), nth($hsl, 3));
}

@function hsv($h, $s: 0, $v: 0) {
	@return hsv_to_hsl($h, $s, $v);
}


$color: #3a33c2;



@function hsb-color($h, $s-hsb: 0, $b-hsb: 0) {
	$ss: 0;
	$ll: 0;

	@if type_of($h) == 'color' {
		$ll: lightness($h);
		$ss: saturation($h);
		$h: hue($h);
	}

	@if unit($h) == 'deg' {
		$h: 3.1415 * 2 * ($h / 360deg);
	}

	@if unit($ss) == '%' {
		$ss: 0 + ($ss / 100%);
	}

	@if unit($ll) == '%' {
		$ll: 0 + ($ll / 100%);
	}

	$ll: $ll * 2;

	@if $ll <= 1 {
		$ss: $ss * $ll;
	}
	@else {
		$ss: $ss * (2 - $ll);
	}

	$v: ($ll + $ss) / 2;
	$s: (2 * $ss) / ($ll + $ss);

	$h-hsb: 360deg * $h / (3.1415 * 2);
	$s-hsb: percentage(max(0, min(1, $s))) + $s-hsb;
	$b-hsb: percentage(max(0, min(1, $v))) + $b-hsb;

	$l-hsl: ($b-hsb/2) * (2 - ($s-hsb/100));
	$s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);
	@return hsl($h-hsb, $s-hsl, $l-hsl);
}


$cc: 320,30%,40%;

.abdc {
	background-color: color_to_hsv(#3a33c2);
}

.a {
	color: hsv_to_color(243,70%,70%);
}

.bc {
	color: hsv(243deg,70%,70%);
}

.btw5oo5eewb {
	color: hsb-color(#ccb43d,10%,-20%);
}
/*---------------------------------------------------------------------------------*/